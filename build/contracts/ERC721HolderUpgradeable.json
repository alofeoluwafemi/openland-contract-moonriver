{
  "contractName": "ERC721HolderUpgradeable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol\":\"ERC721HolderUpgradeable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol\":{\"keccak256\":\"0xb7f90ab8af7dae0bd4acfa088f9e606ea039110face097ca7c8beef563f71e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e980a0ad8d2f81f38d378994a80d46dbb0c46efed9799d6272f69b177e1f0f3c\",\"dweb:/ipfs/QmdgyvytrBV9RC6v8ojAnU9nFE1zPicdbGqHGskbopyHyn\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061021f806100206000396000f3fe608060405234801561001057600080fd5b5060043610610047577c01000000000000000000000000000000000000000000000000000000006000350463150b7a02811461004c575b600080fd5b61008361005a36600461010d565b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b6040517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19909116815260200160405180910390f35b803573ffffffffffffffffffffffffffffffffffffffff811681146100d957600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561012357600080fd5b61012c856100b5565b935061013a602086016100b5565b925060408501359150606085013567ffffffffffffffff8082111561015e57600080fd5b818701915087601f83011261017257600080fd5b813581811115610184576101846100de565b604051601f8201601f19908116603f011681019083821181831017156101ac576101ac6100de565b816040528281528a60208487010111156101c557600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea26469706673582212202d6552512e8453d7ed6db9899a543d78be5c13d1c27309d580bafdc3e361df1864736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610047577c01000000000000000000000000000000000000000000000000000000006000350463150b7a02811461004c575b600080fd5b61008361005a36600461010d565b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b6040517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19909116815260200160405180910390f35b803573ffffffffffffffffffffffffffffffffffffffff811681146100d957600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561012357600080fd5b61012c856100b5565b935061013a602086016100b5565b925060408501359150606085013567ffffffffffffffff8082111561015e57600080fd5b818701915087601f83011261017257600080fd5b813581811115610184576101846100de565b604051601f8201601f19908116603f011681019083821181831017156101ac576101ac6100de565b816040528281528a60208487010111156101c557600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea26469706673582212202d6552512e8453d7ed6db9899a543d78be5c13d1c27309d580bafdc3e361df1864736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1794:35",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:35",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:35"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:35",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:35"
                  },
                  "nodeType": "YulIf",
                  "src": "111:93:35"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:35",
                "type": ""
              }
            ],
            "src": "14:196:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "247:152:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "264:1:35",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "267:77:35",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "257:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "257:88:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "257:88:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "361:1:35",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "364:4:35",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "354:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "354:15:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "354:15:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "385:1:35",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "388:4:35",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "378:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "378:15:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "378:15:35"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "215:184:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "534:1008:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "581:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "590:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "593:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "583:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "583:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "583:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "555:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "564:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "551:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "551:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "576:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "547:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "547:33:35"
                  },
                  "nodeType": "YulIf",
                  "src": "544:53:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "606:39:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "635:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "616:18:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:29:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "606:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "654:48:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "687:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "698:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "683:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "683:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "664:18:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "664:38:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "654:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "711:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "738:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "749:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "734:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "734:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "721:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "721:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "711:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "762:46:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "793:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "804:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "789:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "789:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "776:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:32:35"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "766:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "817:28:35",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "827:18:35",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "821:2:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "872:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "881:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "884:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "874:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "874:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "874:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "860:6:35"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "868:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "857:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "857:14:35"
                  },
                  "nodeType": "YulIf",
                  "src": "854:34:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "897:32:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "911:9:35"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "922:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "907:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:22:35"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "901:2:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "977:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "986:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "989:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "979:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "979:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "979:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "956:2:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "960:4:35",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "952:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "952:13:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "967:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "948:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "948:27:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "941:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:35:35"
                  },
                  "nodeType": "YulIf",
                  "src": "938:55:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1002:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1025:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1012:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1012:16:35"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1006:2:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1051:22:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1053:16:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1053:18:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1053:18:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1043:2:35"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1047:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1040:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1040:10:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1037:36:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1082:17:35",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1096:2:35",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1092:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1092:7:35"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1086:2:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1108:23:35",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1128:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1122:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1122:9:35"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1112:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1140:71:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1162:6:35"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1186:2:35"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1190:4:35",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1182:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1182:13:35"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1197:2:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1178:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1178:22:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1202:2:35",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1174:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1174:31:35"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1207:2:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1170:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1170:40:35"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1158:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1158:53:35"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1144:10:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1270:22:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1272:16:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1272:18:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1272:18:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1229:10:35"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1241:2:35"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1226:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1226:18:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1249:10:35"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1261:6:35"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1246:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:22:35"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1223:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:46:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1220:72:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1308:2:35",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1312:10:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1301:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1301:22:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1301:22:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1339:6:35"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1347:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1332:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:18:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1332:18:35"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1396:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1405:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1408:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1398:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1398:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1398:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1373:2:35"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1377:2:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1369:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1369:11:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1382:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1365:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1365:20:35"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1387:7:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1362:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1362:33:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1359:53:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1438:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1446:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1434:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1434:15:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1455:2:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1459:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1451:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1451:11:35"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1464:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1421:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1421:46:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1421:46:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1491:6:35"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1499:2:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1487:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1487:15:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1504:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1483:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1483:24:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1509:1:35",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1476:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1476:35:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1476:35:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1520:16:35",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1530:6:35"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1520:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "476:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "487:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "499:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "507:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "515:6:35",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "523:6:35",
                "type": ""
              }
            ],
            "src": "404:1138:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1646:146:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1656:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1668:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1679:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1664:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1664:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1656:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1698:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1713:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1725:58:35",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "1721:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1721:63:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1709:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1709:76:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1691:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1691:95:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1691:95:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1615:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1626:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1637:4:35",
                "type": ""
              }
            ],
            "src": "1547:245:35"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)))\n    }\n}",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "459:868:5:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "459:868:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:200;;;;;;:::i;:::-;997:30;834:200;;;;;;;;;;-1:-1:-1;;1709:76:35;;;1691:95;;1679:2;1664:18;834:200:5;;;;;;;14:196:35;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:184::-;267:77;264:1;257:88;364:4;361:1;354:15;388:4;385:1;378:15;404:1138;499:6;507;515;523;576:3;564:9;555:7;551:23;547:33;544:53;;;593:1;590;583:12;544:53;616:29;635:9;616:29;:::i;:::-;606:39;;664:38;698:2;687:9;683:18;664:38;:::i;:::-;654:48;;749:2;738:9;734:18;721:32;711:42;;804:2;793:9;789:18;776:32;827:18;868:2;860:6;857:14;854:34;;;884:1;881;874:12;854:34;922:6;911:9;907:22;897:32;;967:7;960:4;956:2;952:13;948:27;938:55;;989:1;986;979:12;938:55;1025:2;1012:16;1047:2;1043;1040:10;1037:36;;;1053:18;;:::i;:::-;1128:2;1122:9;1096:2;1182:13;;-1:-1:-1;;1178:22:35;;;1202:2;1174:31;1170:40;1158:53;;;1226:18;;;1246:22;;;1223:46;1220:72;;;1272:18;;:::i;:::-;1312:10;1308:2;1301:22;1347:2;1339:6;1332:18;1387:7;1382:2;1377;1373;1369:11;1365:20;1362:33;1359:53;;;1408:1;1405;1398:12;1359:53;1464:2;1459;1455;1451:11;1446:2;1438:6;1434:15;1421:46;1509:1;1504:2;1499;1491:6;1487:15;1483:24;1476:35;1530:6;1520:16;;;;;;;404:1138;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721ReceiverUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721HolderUpgradeable is Initializable, IERC721ReceiverUpgradeable {\n    function __ERC721Holder_init() internal onlyInitializing {\n    }\n\n    function __ERC721Holder_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n",
  "sourcePath": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1163
      ],
      "ERC721HolderUpgradeable": [
        920
      ],
      "IERC721ReceiverUpgradeable": [
        873
      ],
      "Initializable": [
        141
      ]
    },
    "id": 921,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 875,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "104:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "file": "../IERC721ReceiverUpgradeable.sol",
        "id": 876,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 921,
        "sourceUnit": 874,
        "src": "129:43:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../../proxy/utils/Initializable.sol",
        "id": 877,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 921,
        "sourceUnit": 142,
        "src": "173:48:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 879,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 141,
              "src": "495:13:5"
            },
            "id": 880,
            "nodeType": "InheritanceSpecifier",
            "src": "495:13:5"
          },
          {
            "baseName": {
              "id": 881,
              "name": "IERC721ReceiverUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 873,
              "src": "510:26:5"
            },
            "id": 882,
            "nodeType": "InheritanceSpecifier",
            "src": "510:26:5"
          }
        ],
        "canonicalName": "ERC721HolderUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 878,
          "nodeType": "StructuredDocumentation",
          "src": "223:235:5",
          "text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
        },
        "fullyImplemented": true,
        "id": 920,
        "linearizedBaseContracts": [
          920,
          873,
          141
        ],
        "name": "ERC721HolderUpgradeable",
        "nameLocation": "468:23:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "600:7:5",
              "statements": []
            },
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 885,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 884,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 84,
                  "src": "583:16:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "583:16:5"
              }
            ],
            "name": "__ERC721Holder_init",
            "nameLocation": "552:19:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "571:2:5"
            },
            "returnParameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:5"
            },
            "scope": 920,
            "src": "543:64:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "680:7:5",
              "statements": []
            },
            "id": 894,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 891,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 890,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 84,
                  "src": "663:16:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "663:16:5"
              }
            ],
            "name": "__ERC721Holder_init_unchained",
            "nameLocation": "622:29:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:2:5"
            },
            "returnParameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:0:5"
            },
            "scope": 920,
            "src": "613:74:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              872
            ],
            "body": {
              "id": 913,
              "nodeType": "Block",
              "src": "980:54:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 909,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "997:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721HolderUpgradeable_$920",
                          "typeString": "contract ERC721HolderUpgradeable"
                        }
                      },
                      "id": 910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 914,
                      "src": "997:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "997:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 908,
                  "id": 912,
                  "nodeType": "Return",
                  "src": "990:37:5"
                }
              ]
            },
            "documentation": {
              "id": 895,
              "nodeType": "StructuredDocumentation",
              "src": "692:137:5",
              "text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
            },
            "functionSelector": "150b7a02",
            "id": 914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "843:16:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 905,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "954:8:5"
            },
            "parameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "869:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "886:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "903:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "920:12:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "859:79:5"
            },
            "returnParameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "972:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:8:5"
            },
            "scope": 920,
            "src": "834:200:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 915,
              "nodeType": "StructuredDocumentation",
              "src": "1040:254:5",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "id": 919,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1319:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 920,
            "src": "1299:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 916,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1299:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 918,
              "length": {
                "hexValue": "3530",
                "id": 917,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1307:2:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1299:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 921,
        "src": "459:868:5",
        "usedErrors": []
      }
    ],
    "src": "104:1224:5"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1163
      ],
      "ERC721HolderUpgradeable": [
        920
      ],
      "IERC721ReceiverUpgradeable": [
        873
      ],
      "Initializable": [
        141
      ]
    },
    "id": 921,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 875,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "104:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "file": "../IERC721ReceiverUpgradeable.sol",
        "id": 876,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 921,
        "sourceUnit": 874,
        "src": "129:43:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../../proxy/utils/Initializable.sol",
        "id": 877,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 921,
        "sourceUnit": 142,
        "src": "173:48:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 879,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 141,
              "src": "495:13:5"
            },
            "id": 880,
            "nodeType": "InheritanceSpecifier",
            "src": "495:13:5"
          },
          {
            "baseName": {
              "id": 881,
              "name": "IERC721ReceiverUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 873,
              "src": "510:26:5"
            },
            "id": 882,
            "nodeType": "InheritanceSpecifier",
            "src": "510:26:5"
          }
        ],
        "canonicalName": "ERC721HolderUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 878,
          "nodeType": "StructuredDocumentation",
          "src": "223:235:5",
          "text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
        },
        "fullyImplemented": true,
        "id": 920,
        "linearizedBaseContracts": [
          920,
          873,
          141
        ],
        "name": "ERC721HolderUpgradeable",
        "nameLocation": "468:23:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "600:7:5",
              "statements": []
            },
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 885,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 884,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 84,
                  "src": "583:16:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "583:16:5"
              }
            ],
            "name": "__ERC721Holder_init",
            "nameLocation": "552:19:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "571:2:5"
            },
            "returnParameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:5"
            },
            "scope": 920,
            "src": "543:64:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "680:7:5",
              "statements": []
            },
            "id": 894,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 891,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 890,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 84,
                  "src": "663:16:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "663:16:5"
              }
            ],
            "name": "__ERC721Holder_init_unchained",
            "nameLocation": "622:29:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:2:5"
            },
            "returnParameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:0:5"
            },
            "scope": 920,
            "src": "613:74:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              872
            ],
            "body": {
              "id": 913,
              "nodeType": "Block",
              "src": "980:54:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 909,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "997:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721HolderUpgradeable_$920",
                          "typeString": "contract ERC721HolderUpgradeable"
                        }
                      },
                      "id": 910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 914,
                      "src": "997:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "997:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 908,
                  "id": 912,
                  "nodeType": "Return",
                  "src": "990:37:5"
                }
              ]
            },
            "documentation": {
              "id": 895,
              "nodeType": "StructuredDocumentation",
              "src": "692:137:5",
              "text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
            },
            "functionSelector": "150b7a02",
            "id": 914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "843:16:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 905,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "954:8:5"
            },
            "parameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "869:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "886:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "903:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "920:12:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "859:79:5"
            },
            "returnParameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "972:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:8:5"
            },
            "scope": 920,
            "src": "834:200:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 915,
              "nodeType": "StructuredDocumentation",
              "src": "1040:254:5",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "id": 919,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1319:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 920,
            "src": "1299:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 916,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1299:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 918,
              "length": {
                "hexValue": "3530",
                "id": 917,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1307:2:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1299:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 921,
        "src": "459:868:5",
        "usedErrors": []
      }
    ],
    "src": "104:1224:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-15T21:10:33.815Z",
  "devdoc": {
    "details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      }
    },
    "stateVariables": {
      "__gap": {
        "details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}